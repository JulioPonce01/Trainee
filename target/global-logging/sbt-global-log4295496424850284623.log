[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\julio\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\julio\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.2 (Oracle Corporation Java 1.8.0_341)
[debug]       Load.loadUnit: plugins took 90.4394ms
[debug]       Load.loadUnit: defsScala took 0.2848ms
[debug] [Loading] Scanning directory C:\Users\julio\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\julio\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 36.8316 ms
[debug]           Load.resolveProject(global-plugins) took 146.8149ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\julio\.sbt\1.0\plugins, plugins: List(<none>))) took 247.0637ms
[debug] [Loading] Done in C:\Users\julio\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 273.2232ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2951ms
[debug]     Load.loadUnit(file:/C:/Users/julio/.sbt/1.0/plugins/, ...) took 370.7832ms
[debug]   Load.apply: load took 624.0611ms
[debug]   Load.apply: resolveProjects took 5.6716ms
[debug]   Load.apply: finalTransforms took 52.0101ms
[debug]   Load.apply: config.delegates took 16.8178ms
[debug]   Load.apply: Def.make(settings)... took 439.9228ms
[debug]   Load.apply: structureIndex took 111.7865ms
[debug]   Load.apply: mkStreams took 1.5208ms
[info] loading global plugins from C:\Users\julio\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2830.3571ms
[debug]           Load.loadUnit: plugins took 22.1638ms
[debug]           Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory C:\PROYECTOS\projecto\project
[debug]             Load.loadUnit: mkEval took 9.7322ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\PROYECTOS\projecto\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.6804 ms
[info] loading settings for project projecto-build from idea1.sbt ...
[debug]               Load.resolveProject(projecto-build) took 4.6575ms
[debug]             Load.loadTransitive: finalizeProject(Project(id projecto-build, base: C:\PROYECTOS\projecto\project, plugins: List(<none>))) took 9.6209ms
[debug] [Loading] Done in C:\PROYECTOS\projecto\project, returning: (projecto-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2383.2616ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.7604ms
[debug]         Load.loadUnit(file:/C:/PROYECTOS/projecto/project/, ...) took 2416.465ms
[debug]       Load.apply: load took 2421.5998ms
[debug]       Load.apply: resolveProjects took 0.4464ms
[debug]       Load.apply: finalTransforms took 17.0928ms
[debug]       Load.apply: config.delegates took 0.9465ms
[debug]       Load.apply: Def.make(settings)... took 87.6957ms
[debug]       Load.apply: structureIndex took 25.506ms
[debug]       Load.apply: mkStreams took 0.0032ms
[info] loading project definition from C:\PROYECTOS\projecto\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 7332.3473ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\PROYECTOS\projecto
[debug]       Load.loadUnit: mkEval took 0.3321ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\PROYECTOS\projecto, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 11.6509 ms
[info] loading settings for project projecto from build.sbt ...
[debug]         Load.resolveProject(projecto) took 91.5569ms
[debug]       Load.loadTransitive: finalizeProject(Project(id projecto, base: C:\PROYECTOS\projecto, plugins: List(<none>))) took 105.8044ms
[debug] [Loading] Done in C:\PROYECTOS\projecto, returning: (projecto)
[debug]     Load.loadUnit: loadedProjectsRaw took 2147.2467ms
[debug]     Load.loadUnit: cleanEvalClasses took 38.6396ms
[debug]   Load.loadUnit(file:/C:/PROYECTOS/projecto/, ...) took 9519.2369ms
[debug] Load.apply: load took 9522.225ms
[debug] Load.apply: resolveProjects took 0.2474ms
[debug] Load.apply: finalTransforms took 104.5203ms
[debug] Load.apply: config.delegates took 0.6985ms
[debug] Load.apply: Def.make(settings)... took 238.7394ms
[debug] Load.apply: structureIndex took 49.1157ms
[debug] Load.apply: mkStreams took 0.0093ms
[info] set current project to projecto (in build file:/C:/PROYECTOS/projecto/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51037 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51037, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to projecto (in build file:/C:/PROYECTOS/projecto/)
[debug] > Exec(idea-shell, None, None)
